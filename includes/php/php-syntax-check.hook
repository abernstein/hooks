#!/bin/bash

DIR=$(git rev-parse --show-toplevel)
# Auto-Run Composer
if [ -e "$DIR/composer.json" ]; then
  if [ -d "$DIR/vendor" ]; then
    composer.phar install
  else
    composer.phar update
  fi
fi

FILES=$(git diff --cached --name-status --diff-filter=ACMR)
for FILE in ${FILES[@]}
do
  if [[ "$FILE" =~ ^.+(php|inc|phtml)$ ]]; then
    # Lint the File for Syntax Errors
    php -l "$FILE" 1> /dev/null
    if [ $? -ne 0 ]; then
        echo "Aborting commit due to files with syntax errors" >&2
        exit 1
    fi
  
    # Clean up code syntax
    # Suppresses PEAR deprecated errors
    if [[ "$FILE" =~ ^.+(php|inc)$ ]]; then
      FILEPATH=$(dirname "$FILE")
      php_beautifier -s2 -l "Pear() zfish() NewLines(after=T_DOC_COMMENT)" \
        -f "$FILE" -o "$FILEPATH"  2>/dev/null
    fi
  
    # Check against Coding Standards
    TMPSTANDARDS=$(mktemp)
    # -n --report=summary|checkstyle --report-file=<FILE>
    phpcs --standard=Pegasus --report-file="$TMPSTANDARDS" -n "$FILE"
    # the report file always contains at least \n so the size is never 0
    # SIZE=$(stat -c%s "$TMPSTANDARDS")
    if [ $? -gt 0 ]; then
      echo -e "PHPCS: Coding Standards Violations\n" 
      cat $TMPSTANDARDS
    fi
    rm $TMPSTANDARDS
    #if a controller has been modified run integration test suite
    if [[ "$FILE" =~ controller ]]; then
      CONTROLLER=1
    fi
    
  fi
done

#run unit test suites
SUITES="--testsuite Unit"
if [ -n "$CONTROLLER" ]; then
  SUITES=""
fi
TMPUNIT=$(mktemp)
sudo phpunit --stderr --configuration "$DIR"/tests/phpunit_noverbose.xml \
  $SUITES > $TMPUNIT 2>&1
RESULT=$?
if [ $RESULT -gt 0 ]; then
  echo -e "PHPUNIT: Unit Test Violations\n ${TMPUNIT}"
  cat $TMPUNIT
  exit 1
fi
rm $TMPUNIT

exit 0
